worker_processes auto;

events {
	worker_connections 512;
}

http {
	limit_req_zone $binary_remote_addr zone=api_limit:10m rate=1r/s;
	
	limit_req_status 429;
	
	log_format rate_limit_log '$remote_addr - [$time_local] "$request" '
	                          'rate_limited status=$status '
	                          'user_agent="$http_user_agent" '
	                          'referer="$http_referer"';
	
	access_log /var/log/nginx/rate_limit.log rate_limit_log;
	error_log /var/log/nginx/error.log warn;

	server {
		listen 9999;

		location / {
			limit_req zone=api_limit burst=5 nodelay;
			
			proxy_pass http://api:3000;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			
			error_page 429 = @limit_exceeded;
			error_page 503 = @limit_exceeded;
		}

		location @limit_exceeded {
			access_log /var/log/nginx/rate_limit_violations.log rate_limit_log;
			
			default_type application/json;
			return 429 '{"status":"error","message":"Rate limit exceeded. Please try again later.","timestamp":"$time_iso8601","client_ip":"$remote_addr"}';
		}
	}
}